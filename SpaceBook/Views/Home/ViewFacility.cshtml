@model SpaceBook.Models.Facility
@{
    ViewBag.Title = "ViewFacility";
}
<br />

<div class="col-md-3">
    <h2>View Facility</h2>
</div>
<div class="row" style="margin-top:5%">
    <div class="col-md-5">
        <div class="card">
            <div class="card-body">
                <h5 class="card-title">@Model.Name</h5>
                <p class="card-text">@Model.Description</p>
                <hr />
                <p><span class="fa fa-map-marker fa-fw"></span>@Model.Address, @Model.City</p>
                <p><span class="fa fa-phone fa-fw"></span>@Model.Phone</p>
                <p><span class="fa fa-envelope fa-fw"></span>@Model.Email</p>
                <hr />
                @{
                    DateTime currentWeekMonday = DateTime.Now.AddDays(Convert.ToInt32(DayOfWeek.Monday) - ((int)DateTime.Now.DayOfWeek == 0 ? 7 : (int)DateTime.Now.DayOfWeek));
                    currentWeekMonday = new DateTime(currentWeekMonday.Year, currentWeekMonday.Month, currentWeekMonday.Day, 0, 0, 0);
                }
                <button type="button" onclick="location.href='@Url.Action("ViewFacilityAvailability", new { facilityId = Model.Id, dateMondayString = currentWeekMonday.ToString() })'" class="btn btn-primary"><span class="fa fa-calendar fa-fw"></span> View Availability</button>
            </div>
            <div class="card-footer">

            </div>
        </div>
    </div>
    <div class="col-md-7" style="text-align: center">
        <img class="card-img-top" src="\Content\FacilityPhotos\@Model.FacilityPhotoFileName" alt="Card image cap" height="350px" style="width:525px;">
        @*<img class="card-img-top" src="\Content\Images\defaultFacilityPhoto" alt="Card image cap" style="width:50% ; height:50%">*@
    </div>
</div>

<!--The div element for the map -->
<div id="map" style="margin-top:5%"></div>


<div class="col-12" style="margin-top:5%">
    <h2>Reviews (@Model.Reviews.Count)</h2>
    @foreach (var review in Model.Reviews)
    {
        <div class="row">
            <div class="col-3">
                <img class="card-img-top" src="~/Content/ProfilePics/@(review.User.ProfilePicFilename)" alt="Profile_Pic" style="width:50% ; height:50%" />
                <p>@review.User.FirstName</p>
            </div>
            <div class="col-6">
                <p>@review.Comment</p>
            </div>
            <div class="col-3">
                @{
                    var stars = review.Rating;
                    for (int i = 0; i < 5; i++)
                    {
                        if (stars > 0)
                        {
                            <span class="star rated">&nbsp;</span>
                        }
                        else
                        {
                            <span class="star">&nbsp;</span>
                        }
                        stars = stars - 1;
                    };
                }
            </div>
        </div>
    }
</div>


<script>
    var geocoder;
    var map;
    var address = "@Model.Address" + ", " + "@Model.City" + ", " + "@Model.Country";
    function initMap() {
        var map = new google.maps.Map(document.getElementById('map'), {
            zoom: 15,
            center: { lat: -34.397, lng: 150.644 }
        });
        geocoder = new google.maps.Geocoder();
        codeAddress(geocoder, map);
    }

    function codeAddress(geocoder, map) {
        geocoder.geocode({ 'address': address }, function (results, status) {
            if (status === 'OK') {
                map.setCenter(results[0].geometry.location);
                var marker = new google.maps.Marker({
                    map: map,
                    position: results[0].geometry.location
                });
            } else {
                alert('Geocode was not successful for the following reason: ' + status);
            }
        });
    }
</script>
<!--Load the API from the specified URL
* The async attribute allows the browser to render the page while the API loads
* The key parameter will contain your own API key (which is not needed for this tutorial)
* The callback parameter executes the initMap() function
-->
<script async defer
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDDt9cCaqhDgIHJ4YkqLwMh6VvuTCWDdtw&callback=initMap">
</script>


<style>

    /* Set the size of the div element that contains the map */
    #map {
        height: 400px; /* The height is 400 pixels */
        width: 100%; /* The width is the width of the web page */
    }

    .star {
        color: goldenrod;
        font-size: 1.5rem;
    }

        .star::before {
            content: '\2606'; /* star outline */
            cursor: pointer;
        }

        .star.rated::before {
            /* the style for a selected star */
            content: '\2605'; /* filled star */
        }

        .star.rated {
            counter-increment: rateme 1;
        }
</style>
